--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV GX" LPM_DECODES=10 LPM_WIDTH=4 data eq
--VERSION_BEGIN 15.1 cbx_cycloneii 2015:10:21:18:09:23:SJ cbx_lpm_add_sub 2015:10:21:18:09:23:SJ cbx_lpm_compare 2015:10:21:18:09:23:SJ cbx_lpm_decode 2015:10:21:18:09:23:SJ cbx_mgl 2015:10:21:18:12:49:SJ cbx_nadder 2015:10:21:18:09:23:SJ cbx_stratix 2015:10:21:18:09:23:SJ cbx_stratixii 2015:10:21:18:09:23:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_oda
( 
	data[3..0]	:	input;
	eq[9..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[9..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode723w[3..0]	: WIRE;
	w_anode740w[3..0]	: WIRE;
	w_anode750w[3..0]	: WIRE;
	w_anode760w[3..0]	: WIRE;
	w_anode770w[3..0]	: WIRE;
	w_anode780w[3..0]	: WIRE;
	w_anode790w[3..0]	: WIRE;
	w_anode800w[3..0]	: WIRE;
	w_anode810w[3..0]	: WIRE;
	w_anode821w[3..0]	: WIRE;
	w_anode831w[3..0]	: WIRE;
	w_anode841w[3..0]	: WIRE;
	w_anode851w[3..0]	: WIRE;
	w_anode861w[3..0]	: WIRE;
	w_anode871w[3..0]	: WIRE;
	w_anode881w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[1..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode800w[3..3], w_anode790w[3..3], w_anode780w[3..3], w_anode770w[3..3], w_anode760w[3..3], w_anode750w[3..3], w_anode740w[3..3], w_anode723w[3..3]);
	eq_wire2w[] = ( w_anode881w[3..3], w_anode871w[3..3], w_anode861w[3..3], w_anode851w[3..3], w_anode841w[3..3], w_anode831w[3..3], w_anode821w[3..3], w_anode810w[3..3]);
	w_anode723w[] = ( (w_anode723w[2..2] & (! data_wire[2..2])), (w_anode723w[1..1] & (! data_wire[1..1])), (w_anode723w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode740w[] = ( (w_anode740w[2..2] & (! data_wire[2..2])), (w_anode740w[1..1] & (! data_wire[1..1])), (w_anode740w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode750w[] = ( (w_anode750w[2..2] & (! data_wire[2..2])), (w_anode750w[1..1] & data_wire[1..1]), (w_anode750w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode760w[] = ( (w_anode760w[2..2] & (! data_wire[2..2])), (w_anode760w[1..1] & data_wire[1..1]), (w_anode760w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode770w[] = ( (w_anode770w[2..2] & data_wire[2..2]), (w_anode770w[1..1] & (! data_wire[1..1])), (w_anode770w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode780w[] = ( (w_anode780w[2..2] & data_wire[2..2]), (w_anode780w[1..1] & (! data_wire[1..1])), (w_anode780w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode790w[] = ( (w_anode790w[2..2] & data_wire[2..2]), (w_anode790w[1..1] & data_wire[1..1]), (w_anode790w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode800w[] = ( (w_anode800w[2..2] & data_wire[2..2]), (w_anode800w[1..1] & data_wire[1..1]), (w_anode800w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode810w[] = ( (w_anode810w[2..2] & (! data_wire[2..2])), (w_anode810w[1..1] & (! data_wire[1..1])), (w_anode810w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode821w[] = ( (w_anode821w[2..2] & (! data_wire[2..2])), (w_anode821w[1..1] & (! data_wire[1..1])), (w_anode821w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode831w[] = ( (w_anode831w[2..2] & (! data_wire[2..2])), (w_anode831w[1..1] & data_wire[1..1]), (w_anode831w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode841w[] = ( (w_anode841w[2..2] & (! data_wire[2..2])), (w_anode841w[1..1] & data_wire[1..1]), (w_anode841w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode851w[] = ( (w_anode851w[2..2] & data_wire[2..2]), (w_anode851w[1..1] & (! data_wire[1..1])), (w_anode851w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode861w[] = ( (w_anode861w[2..2] & data_wire[2..2]), (w_anode861w[1..1] & (! data_wire[1..1])), (w_anode861w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode871w[] = ( (w_anode871w[2..2] & data_wire[2..2]), (w_anode871w[1..1] & data_wire[1..1]), (w_anode871w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode881w[] = ( (w_anode881w[2..2] & data_wire[2..2]), (w_anode881w[1..1] & data_wire[1..1]), (w_anode881w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
